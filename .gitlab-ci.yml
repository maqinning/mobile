stages:
  # - test
  - build
  - deploy

# sonar_analyze:
#   stage: test
#   script:
#     - ci/sonar_analyze.sh
#   tags:
#     - hmadmin-vue

# sonar_preview:
#   stage: test
#   script:
#     - ci/sonar_preview.sh
#   tags:
#     - hmadmin-vue

# CI 变量
# $CI_DOCKER_REGISTRY_SERVER          镜像服务器
# $CI_DOCKER_REGISTRY_SERVER_USER     账号
# $CI_DOCKER_REGISTRY_SERVER_PASS     密码
# $CI_DOCKER_REGISTRY_SERVER_PROJECT  项目

# v1
build_image:
  stage: build
  script:
    - cnpm i
    - npm run build
    - docker build -t $CI_DOCKER_REGISTRY_SERVER/$CI_DOCKER_REGISTRY_SERVER_PROJECT/$CI_PROJECT_NAME:$CI_PIPELINE_ID .
    - docker login -u $CI_DOCKER_REGISTRY_SERVER_USER -p $CI_DOCKER_REGISTRY_SERVER_PASS $CI_DOCKER_REGISTRY_SERVER
    - docker push $CI_DOCKER_REGISTRY_SERVER/$CI_DOCKER_REGISTRY_SERVER_PROJECT/$CI_PROJECT_NAME:$CI_PIPELINE_ID
    - docker rmi $CI_DOCKER_REGISTRY_SERVER/$CI_DOCKER_REGISTRY_SERVER_PROJECT/$CI_PROJECT_NAME:$CI_PIPELINE_ID
  tags:
    - centos-60 # 172.17.0.60 负责 CI 镜像打包、上传

deploy_image:
  stage: deploy
  script:
    - sed -i 's/$DOCKER_REGISTRY_SERVER_PROJECT/'$(echo $CI_DOCKER_REGISTRY_SERVER_PROJECT)'/g' ./k8s/4-deployment.yaml
    - sed -i 's/$DOCKER_REGISTRY_SERVER/'$(echo $CI_DOCKER_REGISTRY_SERVER)'/g' ./k8s/4-deployment.yaml
    - sed -i 's/$CI_PROJECT_NAME/'$(echo $CI_PROJECT_NAME)'/g' ./k8s/4-deployment.yaml
    - sed -i 's/$CI_PIPELINE_ID/'$(echo $CI_PIPELINE_ID)'/g' ./k8s/4-deployment.yaml
    - cat ./k8s/4-deployment.yaml
    - kubectl apply -f ./k8s/1-namespace.yaml
    - kubectl apply -f ./k8s/4-deployment.yaml
    - kubectl apply -f ./k8s/5-service.yaml
    - kubectl apply -f ./k8s/6-ingress.yaml
  tags:
    - centos-60 # 172.17.0.60 负责 CD k8s 容器部署
